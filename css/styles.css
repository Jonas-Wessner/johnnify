@import "./normalize.css"

/* definition of custom variables */
:root{
    --color-primary: #2584ff;
    --color-primary-dark: #1f77eb;
    --color-secondary: #00d9ff;
    --color-secondary-dark: #27cedd;
    --color-accent: #ff3400;
    --color-accent-dark: #ec3000;
    --color-headings: #1b0760;
    --color-body: #918ca4;
    --color-body-dark: #5c5577;
    --color-border: #ccc;
    --border-radius-full: 100000rem; /* set border radius to maximum round corners using a very large value*/
}

*,
*::after,
*::before{
    box-sizing: border-box; /* sizes of elements are calculated including the border size */
}

/* Typography */
::selection{
    background: var(--color-primary);
    color: white;
}

html{
    /* browsers standard for font-size is 16px.
    We multiply this by 0.625 to get 10px and
    easier calculations for rem-values.
    If the default font-size in the browser is changed
    by the user our font-size on this page thus is also increased */
    font-size: 62.5%;
}

body{
    font-family: Inter, Arial, Helvetica, sans-serif;
    color: var(--color-body);
    font-size: 2.4rem;
    line-height: 1.5; /* separate lines by 1.5*font-size */
}

h1, h2, h3{
    color: var(--color-headings);
    margin-bottom: 1rem; /* mostly margin to paragraphs */
    line-height: 1.1; /* override the line-height we gave to the body text */
}

h1{
    font-size: 7rem; /* translates to 70px is user keeps the default font-size in browser */
}

h2{
    font-size: 4rem;
}

h3{
    font-size: 3rem;
    font-weight: 500;
}

p{
    margin-top: 0; /* we want to use the margin-bottom of headings */
}

/* modifications for desktop view */
@media screen and (min-width: 1024px){
    h1{
        font-size: 8rem;
    }

    h3{
        font-size: 2.4rem;
    }
}

/* Links */
a{
    text-decoration: none;
}

a:hover{
    transition: all 0.3s;
}

.link-arrow{
    color: var(--color-accent);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
    transition: font-size 0.25s;
}

.link-arrow::after{
    content: "-->";
    margin-left: 0.5rem;
    transition: margin-left 0.25s;
}

/* when we hover over the link, the arrow after is shall get modified */
.link-arrow:hover::after{
    margin-left: 1rem; /* move arrow 0.5rem to the right */
}

.link-arrow:hover{
    font-size: 2.3rem;
}

@media screen and (min-width: 1024px){
    .link-arrow{
        font-size: 1.5rem;
    }
    .link-arrow:hover{
        font-size: 1.8rem;
    }
}

/* Badges */
.badge{
    border-radius: 2rem;
    font-size: 2rem;
    font-weight: bold;
    padding: 0.5rem 2rem;
    white-space: nowrap; /* prevents the text from breaking into a new line */
}

.badge--primary{ /* variation of the badge with the primary color as background */
    background-color: var(--color-primary);
    color: white;
}

.badge--secondary{
    background-color: var(--color-secondary);
    color: white;
}

.badge--small{
    font-size: 1.6rem;
    padding: 0.5rem 1.5rem;
}

/* Lists */
.list{
    list-style: none;   /* get rid of the default bullet points */
    padding-left: 0;    /* get rid of the default padding */ 
    margin: 0;
}

.list--inline .list__item{
    display: inline-block; /* show items in horizontal line but still allow defining margins */
    margin-right: 2rem;
}

.list--tick{
    color: var(--color-headings);
}

.list--tick .list__item::before{ /* define the tick */
    content: "";
    display: inline-block;
    height: 2rem;
    width: 2rem;
    margin-right: 1rem; /* separate tick from text */
    background-image: url("../images/check.svg");
    background-repeat: no-repeat;
    background-position: left center;
    background-size: 2rem;
}

.list--tick .list__item{
    margin-bottom: 1rem; /* separate items */
}

/* Icons */
.icon
{
    width: 4rem;
    height: 4rem;
}

.icon--primary{
    fill: var(--color-primary);
}

.icon--white{
    fill:white;
}

.icon-container{
    align-items: center;
    background-color: #f3f9fa;
    border-radius: 50%;
    display: inline-flex;
    height: 6.4rem;
    justify-content: center;
    width: 6.4rem;

}

/* Buttons */
.btn{
    border-radius: var(--border-radius-full);
    border: 0;
    cursor: pointer; /* is the standard for buttons, but not for e.g. anchors */
    font-size: 1.8rem;
    font-weight: 600;
    padding: 2rem 3rem;
    text-transform: uppercase;
    white-space: nowrap; /* prevent text from breaking into new line */
    text-align: center; /* always display text in the center, default for buttons already, but e.g. for anchors not */
    margin: 1rem 0rem; /* always separate btn vertically from other elements, horizontally not always */
}

/* In case we use icons in buttons, determine their size and position */
.btn .icon{
    height: 2rem;
    width: 2rem;
    vertical-align: middle;
    margin-right: 1rem;
}

.btn--primary{
    background-color: var(--color-primary);
    color: white;
}

.btn--primary:hover,
.btn--primary:focus{
    background-color: var(--color-primary-dark);
}

.btn--secondary{
    background-color: var(--color-secondary);
    color: white;
}

.btn--secondary:hover,
.btn--secondary:focus{
    background-color: var(--color-secondary-dark);
}

.btn--accent{
    background-color: var(--color-accent);
    color: white;
}

.btn--accent:hover,
.btn--accent:focus{
    background-color: var(--color-accent-dark);
}

.btn--outline{
    border: 0.2rem solid var(--color-headings);
    background-color: white;
    color: var(--color-headings);
}

.btn--outline:hover{
    background-color: var(--color-headings);
    color: white;
}

.btn--block{
    display: inline-block; /* in order to be able to attach this class to inline elements like anchors */
    width: 100%;
}

.btn--stretched{
    padding-left: 6rem;
    padding-right: 6rem;
}

@media screen and (min-width: 1024px){
    .btn{
        font-size: 1.5rem;
    }
}

/* Inputs */
.input{
    border-radius: var(--border-radius-full);
    border: 0.1rem solid var(--color-border);
    color: var(--color-headings);
    font-size: 2rem;
    outline: none; /* get rid of default outline that browsers apply when clicked on */
    padding: 1.5rem 3.5rem;
}

::placeholder{
    color:#cdcbd7; /* potentially used in inputs */
}

@media screen and (min-width: 1024px){
    .input{
        font-size: 1.5rem;
    }
}

/* Input-Groups */
.input-group{
    border: 0.1rem solid var(--color-border);
    border-radius: var(--border-radius-full);
    display: flex;
}

.input-group .btn{
    margin: 0; /* smaller margin for btns inside input groups to move them closer to the border of the input group */
    padding: 2rem 2rem; /* create more space for input by minimizing horizontal padding */
}

.input-group .input{
    /* input-elements inside an input group shall not have the border that we normally want them to have */
    border: 0;
    padding-right: 1rem; /* their should be less space between the input and the button */
    /* Initially set the width to 0, then let it take up all the available space */
    width: 0;
    flex-grow: 1;
}

@media screen and (min-width: 768px){
    .input-group .btn{
        padding: 2rem 4rem; /* on wider screens we can make the button longer */
    }
}

/* Cards */
.card{
    border-radius: 0.7rem;
    /* hides overflowing contained element-parts such as the background of the card__header at the edges */
    overflow: hidden;
    box-shadow: 0 0 2rem 1rem #f3f3f3; /* offset-h, offset-v, blurring, spreading */
    margin: 2rem;
}

.card__header,
.card__body{
    padding: 2rem 3rem;    
}

.card--primary .card__header{
    background-color: var(--color-primary);
    color: white;
}

.card--primary .badge--primary{ /* adjust badge-color when used in card to still be visible in the header */
    background-color: var(--color-primary-dark);
}

.card--secondary .card__header{
    background-color: var(--color-secondary);
    color: white;
}

.card--secondary .badge--secondary{
    background-color: var(--color-secondary-dark);
}

/* Plans */
.plan{
    width: 100%; /* fill container */
    max-width: 50rem; /* plans only look good up to that level */
}

.plan__name{
    color:white;
    margin: 0; /* get rid of default margin that e.g. headings have */
    font-weight: 500;
    font-size: 2.4rem;
}

.plan__price{
    font-size: 6rem;
}

.plan__billing-cycle{
    font-size: 2.4rem;
    font-weight: 300;
    opacity: 0.8;
    margin-right: 1rem;
}

.plan__description{
    font-size: 2rem;
    font-weight: 300;
    letter-spacing: 0.1rem;
    display: block;
}

.plan .list__item{
    margin-bottom: 2rem;
}

.plan--popular .card__header{
    position: relative; /* allow the popular-icon to be positioned absolute to this item */
}

.plan--popular .card__header::before{
    content: url(../icons/popular.svg);
    width: 4rem;
    display: inline-block;
    position: absolute;
    top: -0.6rem;
    right: 5%;
}

@media screen and (min-width: 1024px){
    .plan__name{
        font-size: 1.4rem;
    }

    .plan__price{
        font-size: 5rem;
    }
    
    .plan__billing-cycle{
        font-size: 1.6rem;
    }
}

/* Media-Objects */
.media{
    display: flex;
    margin: 2rem 0;
}
.media__title{
    margin-top: 0; /* reset margin that e.g. headings have */
}

.media__body{
    margin: 0 2rem;
}

.media__image{
    margin-top: 1rem;
}

/* Quotes */
.quote{
    color: var(--color-body-dark);
}

.quote__text{
    font-size: 3rem;
    font-style: italic;
    line-height: 140%;
}

.quote__text::before{
    content: open-quote;
}

.quote__text::after{
    content: close-quote;
}

.quote__author{
    font-size: 3rem;
    font-weight: 500;
    margin-bottom: 0;
}

.quote__organization{
    color: var(--color-headings);
    opacity: 0.4;
    font-size: 2rem;
}

.quote__line{
    /* moves the element 0.5rem upwards from it+s original position */
    position: relative;
    bottom: 0.5rem;
}

/* Grids */
.grid{
    display: grid;
    justify-items: center;
}

@media screen and (min-width: 768px){ /* Tablets */
    .grid--cols-2{
        grid-template-columns: repeat(2, 1fr);
    }
}

@media screen and (min-width: 1024px){ /* Desktop */
    .grid--cols-3{
        grid-template-columns: repeat(3, 1fr);
    }
}

/* Testimonials */
.testimonial{
    padding: 3rem;
}

.testimonial__image{
    width: 100%; /* resize image to fill one column */
}

/* In this case we are on tablet or desktop and have a 2-col grid */
@media screen and (min-width: 768px){
    /* we have to little space on tablets for the quote,
       so we need smaller text */
    .testimonial .quote__text,
    .testimonial .quote__author{
        font-size: 2.4rem;
    }

    .testimonial .quote{
        /* some space between the image and the quote */
        margin-left: 6rem; 
    }
    
    .quote{
        /* center the quote in it's cell */
        margin-top: auto;
        margin-bottom: auto;
    }
}

/* Callouts */
.callout{
    padding: 4rem;
    border-radius: 0.5rem;
}

.callout__content{
    text-align: center;
}

.callout--primary{
    background-color: var(--color-primary);
    color: white;
}

.callout__heading{
    color: white;
    margin-top: 0; /* reset default margin */
    font-size: 3rem;
}

.callout .btn{
    justify-self: center;
    align-self: center;
}

@media screen and (min-width: 768px){
    .callout{
        /* only give button the space it needs, rest is allocated to content */
        grid-template-columns: 1fr auto;
    }

    .callout__content{
        text-align: left;
    }

    .callout .btn{ 
        /* move button next to the content */
        justify-self: start;
        margin: 0 2rem;
    }
}

/* Collapsibles */

.collapsible{
    width: 100%;
}

.collapsible__header{
    display: flex;
    align-items: center;
    justify-content: space-between; /* push content to the edges */
}

.collapsible__heading{
    margin-top: 0; /* reset default margin of headings */
    font-size: 3rem;
}

 /* initially collapsed state */
.collapsible__icon{
    transform: rotate(90deg);
    transition: all 0.3s;
}

.collapsible__content{
    /* hide the content, use max-height,
       because we then can use animation when is expands */
    overflow: hidden;
    max-height: 0;
    opacity: 0;
    transform: translateX(-10%);
    transition: all 0.4s;
}

/* expanded state */
.collapsible--expanded .collapsible__icon{
    transform: rotate(0deg); /* not rotate -> back to initial state of sgv */
}

.collapsible--expanded .collapsible__content{
    max-height: 100vh; /* make content visible */
    transform: translateX(0%);
    opacity: 100%;
}

/* Blocks */
.block{
    --padding-vertical: 6rem;
    padding: var(--padding-vertical) 2rem;
}

.block h1,
.block h2,
.block h3{
    margin-top: 0; /* reset default margin for headings */
}

.block__header{
    text-align: center;
}

.block--dark{
    background: black;
    color: #7b858b;
}

.block--dark h1,
.block--dark h2,
.block--dark h3{
    color: white;
}

.block--skewed-right{
    /* can easily be created with clip-path generators like clippy */
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 95%);
    /* Padding has to be increased, because the skewed corner eats a bit of padding */
    padding-bottom: calc(var(--padding-vertical) + 4rem);
}

.block--skewed-left{
    /* can easily be created with clip-path generators like clippy */
    clip-path: polygon(0% 0%, 100% 0%, 100% 95%, 0% 100%);
    /* Padding has to be increased, because the skewed corner eats a bit of padding */
    padding-bottom: calc(var(--padding-vertical) + 4rem);
}

@media screen and (min-width: 768px){
    /* on wider screens we can skew the block to more percent,
    because the angle increases due to the increasing screen width */
    .block--skewed-right{
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 90%);
    }

    .block--skewed-left{
        clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
    }
}

/* Containers */

.container{ 
    max-width: 1140px;
    margin: 0 auto; /* center horizontally */
}

/* Navigations */
.navigation{
    background-color: black;
    flex-wrap: wrap;
    padding: 0 1rem;
}
.navigation__list{
    /* Because wrapping is enabled on the container
       a width of 100% will make each item appear on a new line*/
    width: 100%;
}

.navigation__item{
    padding: 0.5rem 2rem;
    border-bottom: 1px solid #222;
}

.navigation__item:last-child{
    border-style: hidden; /* only show borders between elems */
}

.navigation__item > a,
.navigation__toggler
{
    /* cannot set this on the item,
       because it would be overridden by the more specific
       rule that we have applied to links */
    color: white;
    opacity: 0.5;
    cursor: pointer;
}

.navigation__toggler{
    transition: all 0.3s; /* rotation as well as opacity */
}

.navigation__item > a{
    display: inline-block;
    height: 100%;
    width: 100%;
}

.navigation__item > a:hover,
.navigation__item > a:focus,
.navigation__toggler:hover,
.navigation__toggler:focus,
.navigation.collapsible--expanded .navigation__toggler
{
    opacity: 1.0;
}

@media screen and (min-width: 768px){
    /* align all items in one line overriding the
       default style of the collapsible-component */
    .navigation{
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    /* collapsible shall always be expanded, so manually set all properties here */
    .navigation.collapsible .navigation__list.collapsible__content{
        max-height: 100vh;
        opacity: 1;
    }

    .navigation__toggler{
        display: none;
    }

    .navigation__list{
        display: flex;
        width: auto;
        font-size: 2rem;
    }

    .navigation__item{
        border-style: none;
    }
}

/* Hero */
.hero__tagline{
    font-size: 2rem;
    color: #b9c3cf;
    letter-spacing: 1px;
    margin: 2rem 0 5rem 0;
}

.hero picture{
    /* center the image itself inside the picture tag */
    display: flex;
    justify-content: center;
    align-items: center;
}

.hero__image{
    width: 100%;
}

.hero__content{
    align-self: center;
}

@media screen and (min-width: 768px){
    .hero{
        padding-top: 0;
    }
}

/* Domain Sections */
.domain-section .input-group{
    border-style: none;
    box-shadow: 0 0 3rem 2rem #e6ebee;
    margin: 4rem 0;
}

.domain-section__prices{
    align-items: center; /* align vertically */
    color: var(--color-headings);
    display: grid;
    font-size: 2rem;
    font-weight: bold; 
    grid-template-columns: repeat(2, 1fr); /* equally distribute space to cols */
    grid-template-rows: repeat(2, 6rem); /* manage height of rows */
    justify-items: center; /* align horizontally */
}

@media screen and (min-width: 768px){
    .domain-section__prices{
        /* Allow items to take up a minimum of 10rem and a max of 1 fraction,
           where the fraction is dependent on the number of elements */
        grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    }
}

/* Plan Sections */
.plans-section .plan{
    transition: transform 0.2s ease-out;
}

.plans-section .plan:hover{
    transform: scale(1.05);
}

.plans-section .plan--popular:hover{
    transform: scale(1.1);
}

@media screen and (min-width: 1024px){
    .plans-section .plan--popular{
        transform: scale(1.05);
    }
}

/* Features */
.feature{
    gap: 4rem 2rem;
}

.feature__heading{
    margin-top: 2rem;
}

/* Feature Sections */
.feature-section{
    text-align: center;
    margin-top: 10rem;
}

.feature-section .feature{
    margin: 5rem
}

.feature__tagline{
    margin-bottom: 1rem; /* reduce bottom margin that initially comes from hero class */
}

@media screen and (min-width: 768px){
    .feature:nth-of-type(even) .feature__content{
        /* Alternate order of grid elements by placing the first element to the
           second spot, which causes the second one to move to the first spot */
        order: 2; 
    }
}

/* Showcase Sections */
.showcase-section__image > img{
    width: 100%;
}

@media screen and (min-width: 768px){
    /* Starting from tablets we want the image to be on the right side and
       always be at the same size. If the screen is to small we want the image
       to go out of the screen on the left side */
    .showcase-section__image{
        justify-self: end; /* align with the right edge of grid */
    }

    .showcase-section__image > img{
        width: auto; /* display image in actual size, maybe create intentional overflow */
        max-width: 700px;
    }

    .showcase-section .grid--cols-2{
        grid-template-columns: 50% 50%;
    }
}

/* Footer */
.footer{
    background: #232323;
}

.footer__section{
    padding: 2rem;
    border-bottom: 2px solid #393939;
}

.footer__heading{
    text-transform: uppercase;
    font-size: 2.5rem;
    font-weight: 600;
}

.footer__brand{
    margin-top: 5rem;
    text-align: center;
}

.footer__brand img{
    width: 100%; /* make image responsive */
    max-width: 20rem;
}

.footer__copyright{
    font-size: 2rem;
    color: white;
    opacity: 0.3;
}

.footer a{
    color: #777;
}

/* TODO: consider extracting styles and transitions for links on dark background */
.footer a:hover{
    color: white ;
}

.footer .list{
    /* in case that list items fill multiple lines, move them closer together */
    line-height: 1.2;
}

.footer .list li {
    /* Separate list items from each other */
    margin: 1rem 0;
}

@media screen and (min-width: 786px){
    .footer > .grid{
        grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
        justify-items: start;
    }
    
    .footer .collapsible__icon{
        display: none;
    }
    
    .footer .collapsible__content{
        /* must remove all attributes that are applied to collapsible__content
           in the not-expanded state. Those where defined for animations when the content gets expanded.
           We do not use the animations here, because the content is always expanded on wide screens */
        max-height: 100%;
        opacity: 1;
        transform: translateX(0%);
    }

    .footer__brand{
        /* Make this the first element of the grid */
        order: -1;
        margin-top: 1rem;
    }

    .footer__copyright{
        font-size: 1.5rem;
    }

    .footer__section{
        border: 0;
    }

    .footer__heading{
        font-size: 2.5rem
    }
}


/* Styles for specific elements */
#callout-ready-to-start{
    transform: translateY(4rem);
}